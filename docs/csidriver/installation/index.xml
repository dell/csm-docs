<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Dell Technologies â€“ Installation</title>
    <link>https://dell.github.io/csm-docs/docs/csidriver/installation/</link>
    <description>Recent content in Installation on Dell Technologies</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    
	  <atom:link href="https://dell.github.io/csm-docs/docs/csidriver/installation/index.xml" rel="self" type="application/rss+xml" />
    
    
      
        
      
    
    
    <item>
      <title>Docs: CSI Driver installation using Helm</title>
      <link>https://dell.github.io/csm-docs/docs/csidriver/installation/helm/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://dell.github.io/csm-docs/docs/csidriver/installation/helm/</guid>
      <description>
        
        
        &lt;p&gt;This section provides the details and instructions on how to install the CSI Driver components using the provided Helm charts and in the case of the CSI drivers, the Dell CSI Helm Installer.&lt;/p&gt;
&lt;h2 id=&#34;dependencies&#34;&gt;Dependencies&lt;/h2&gt;
&lt;p&gt;Installing any of the CSI Driver components using Helm requires a few utilities to be installed on the system running the installation.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Dependency&lt;/th&gt;
&lt;th&gt;Usage&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;kubectl&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Kubectl is used to validate that the Kubernetes system meets the requirements of the driver.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;helm&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Helm v3 is used as the deployment tool for Charts. Go &lt;a href=&#34;https://helm.sh/docs/intro/install/&#34;&gt;here&lt;/a&gt; to install Helm 3.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;sshpass&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;sshpass is used to check certain pre-requisites in worker nodes (in chosen drivers).&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; To use these tools, a valid &lt;code&gt;KUBECONFIG&lt;/code&gt; is required. Ensure that either a valid configuration is in the default location, or, that the &lt;code&gt;KUBECONFIG&lt;/code&gt; environment variable points to a valid configuration before using these tools.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: CSI Driver installation using Dell CSI Operator</title>
      <link>https://dell.github.io/csm-docs/docs/csidriver/installation/operator/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://dell.github.io/csm-docs/docs/csidriver/installation/operator/</guid>
      <description>
        
        
        

&lt;div class=&#34;pageinfo pageinfo-primary&#34;&gt;
&lt;p&gt;The Dell CSI Operator is no longer actively maintained or supported. Dell CSI Operator has been replaced with &lt;a href=&#34;https://dell.github.io/csm-docs/docs/deployment/csmoperator/&#34;&gt;Dell CSM Operator&lt;/a&gt;. If you are currently using Dell CSI Operator, refer to the &lt;a href=&#34;https://dell.github.io/csm-docs/csm-docs/docs/csidriver/installation/operator/operator_migration/&#34;&gt;operator migration documentation&lt;/a&gt; to migrate from Dell CSI Operator to Dell CSM Operator.&lt;/p&gt;

&lt;/div&gt;


      </description>
    </item>
    
    <item>
      <title>Docs: Offline Installation of Dell CSI Storage Providers</title>
      <link>https://dell.github.io/csm-docs/docs/csidriver/installation/offline/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://dell.github.io/csm-docs/docs/csidriver/installation/offline/</guid>
      <description>
        
        
        &lt;p&gt;The &lt;code&gt;csi-offline-bundle.sh&lt;/code&gt; script can be used to create a package usable for offline installation of the Dell CSI Storage Providers, via either Helm or the Dell CSM Operator.&lt;/p&gt;
&lt;p&gt;This includes the following drivers:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/dell/csi-vxflexos&#34;&gt;PowerFlex&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/dell/csi-powermax&#34;&gt;PowerMax&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/dell/csi-powerscale&#34;&gt;PowerScale&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/dell/csi-powerstore&#34;&gt;PowerStore&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/dell/csi-unity&#34;&gt;Unity XT&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;As well as the Dell CSM Operator.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/dell/csm-operator&#34;&gt;Dell CSM Operator&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;Directions for offline installation can be found &lt;a href=&#34;https://dell.github.io/csm-docs/csm-docs/docs/deployment/csmoperator/#building-an-offline-bundle&#34;&gt;here&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;dependencies&#34;&gt;Dependencies&lt;/h2&gt;
&lt;p&gt;Multiple Linux-based systems may be required to create and process an offline bundle for use.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;One Linux-based system, with Internet access, will be used to create the bundle. This involved the user cloning a git repository hosted on github.com and then invoking a script that utilizes &lt;code&gt;docker&lt;/code&gt; or &lt;code&gt;podman&lt;/code&gt; to pull and save container images to file.&lt;/li&gt;
&lt;li&gt;One Linux-based system, with access to an image registry, to invoke a script that uses &lt;code&gt;docker&lt;/code&gt; or &lt;code&gt;podman&lt;/code&gt; to restore container images from file and push them to a registry&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If one Linux system has both Internet access and access to an internal registry, that system can be used for both steps.&lt;/p&gt;
&lt;p&gt;Preparing an offline bundle requires the following utilities:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Dependency&lt;/th&gt;
&lt;th&gt;Usage&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;docker&lt;/code&gt; or &lt;code&gt;podman&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;docker&lt;/code&gt; or &lt;code&gt;podman&lt;/code&gt; will be used to pull images from public image registries, tag them, and push them to a private registry.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;One of these will be required on both the system building the offline bundle as well as the system preparing for installation.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;Tested version(s) are &lt;code&gt;docker&lt;/code&gt; 19.03+ and &lt;code&gt;podman&lt;/code&gt; 1.6.4+&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;git&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;git&lt;/code&gt; will be used to manually clone one of the above repositories in order to create an offline bundle.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;This is only needed on the system preparing the offline bundle.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;Tested version(s) are &lt;code&gt;git&lt;/code&gt; 1.8+ but any version should work.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;workflow&#34;&gt;Workflow&lt;/h2&gt;
&lt;p&gt;To perform an offline installation of a driver or the Operator, the following steps should be performed:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Build an offline bundle&lt;/li&gt;
&lt;li&gt;Unpacking the offline bundle created in Step 1 and preparing for installation&lt;/li&gt;
&lt;li&gt;Perform either a Helm installation or Operator installation using the files obtained after unpacking in Step 2&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; It is recommended to use the same build tool for packing and unpacking of images (either docker or podman).&lt;/p&gt;
&lt;h3 id=&#34;building-an-offline-bundle&#34;&gt;Building an offline bundle&lt;/h3&gt;
&lt;p&gt;This needs to be performed on a Linux system with access to the Internet as a git repo will need to be cloned, and container images pulled from public registries.&lt;/p&gt;
&lt;p&gt;To build an offline bundle, the following steps are needed:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Perform a &lt;code&gt;git clone&lt;/code&gt; of the desired repository. For a helm-based install, the specific driver repo should be cloned. For an Operator based deployment, the Dell CSM Operator repo should be cloned&lt;/li&gt;
&lt;li&gt;Run the &lt;code&gt;csi-offline-bundle.sh&lt;/code&gt; script with an argument of &lt;code&gt;-c&lt;/code&gt; in order to create an offline bundle&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;For Helm installs, the &lt;code&gt;csi-offline-bundle.sh&lt;/code&gt; script will be found in the &lt;code&gt;dell-csi-helm-installer&lt;/code&gt; directory&lt;/li&gt;
&lt;li&gt;For Operator installs, the &lt;code&gt;csm-offline-bundle.sh&lt;/code&gt; script will be found in the &lt;code&gt;scripts&lt;/code&gt; directory&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The script will perform the following steps:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Determine required images by parsing either the driver Helm charts (if run from a cloned CSI Driver git repository) or the Dell CSM Operator configuration files (if run from a clone of the Dell CSM Operator repository)&lt;/li&gt;
&lt;li&gt;Perform an image &lt;code&gt;pull&lt;/code&gt; of each image required&lt;/li&gt;
&lt;li&gt;Save all required images to a file by running &lt;code&gt;docker save&lt;/code&gt; or &lt;code&gt;podman save&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Build a &lt;code&gt;tar.gz&lt;/code&gt; file containing the images as well as files required to installer the driver and/or Operator&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The resulting offline bundle file can be copied to another machine, if necessary, to gain access to the desired image registry.&lt;/p&gt;
&lt;p&gt;For example, here is the output of a request to build an offline bundle for the Dell CSM Operator:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git clone -b v1.4.3 https://github.com/dell/csm-operator.git
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87&#34;&gt;cd&lt;/span&gt; csm-operator
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;bash scripts/csm-offline-bundle.sh -c
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;*
* Building image manifest file

   Processing file /root/csm-operator/operatorconfig/driverconfig/common/default.yaml
   Processing file /root/csm-operator/bundle/manifests/dell-csm-operator.clusterserviceversion.yaml

*
* Pulling and saving container images

   dellemc/csi-isilon:v2.9.1
   dellemc/csi-metadata-retriever:v1.6.1
   dellemc/csipowermax-reverseproxy:v2.8.1
   dellemc/csi-powermax:v2.9.1
   dellemc/csi-powerstore:v2.9.1
   dellemc/csi-unity:v2.8.1
   dellemc/csi-vxflexos:v2.9.2
   dellemc/csm-authorization-sidecar:v1.9.1
   dellemc/csm-metrics-powerflex:v1.5.0
   dellemc/csm-metrics-powerscale:v1.2.0
   dellemc/csm-topology:v1.5.0
   dellemc/dell-csi-replicator:v1.7.1
   dellemc/dell-replication-controller:v1.7.0
   dellemc/sdc:4.5
   docker.io/dellemc/dell-csm-operator:v1.4.3
   gcr.io/kubebuilder/kube-rbac-proxy:v0.8.0
   nginxinc/nginx-unprivileged:1.20
   otel/opentelemetry-collector:0.42.0
   registry.k8s.io/sig-storage/csi-attacher:v4.3.0
   registry.k8s.io/sig-storage/csi-external-health-monitor-controller:v0.9.0
   registry.k8s.io/sig-storage/csi-node-driver-registrar:v2.8.0
   registry.k8s.io/sig-storage/csi-provisioner:v3.5.0
   registry.k8s.io/sig-storage/csi-resizer:v1.8.0
   registry.k8s.io/sig-storage/csi-snapshotter:v6.2.2

*
* Copying necessary files

 /root/csm-operator/deploy
 /root/csm-operator/operatorconfig
 /root/csm-operator/samples
 /root/csm-operator/scripts
 /root/csm-operator/README.md
 /root/csm-operator/LICENSE

*
* Compressing release

dell-csm-operator-bundle/
dell-csm-operator-bundle/deploy/
dell-csm-operator-bundle/deploy/operator.yaml
dell-csm-operator-bundle/deploy/crds/
dell-csm-operator-bundle/deploy/crds/storage.dell.com_containerstoragemodules.yaml
dell-csm-operator-bundle/deploy/olm/
dell-csm-operator-bundle/deploy/olm/operator_community.yaml
...
...
dell-csm-operator-bundle/README.md
dell-csm-operator-bundle/LICENSE

*
* Complete

Offline bundle file is: /root/csm-operator/dell-csm-operator-bundle.tar.gz
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;unpacking-the-offline-bundle-and-preparing-for-installation&#34;&gt;Unpacking the offline bundle and preparing for installation&lt;/h3&gt;
&lt;p&gt;This needs to be performed on a Linux system with access to an image registry that will host container images. If the registry requires &lt;code&gt;login&lt;/code&gt;, that should be done before proceeding.&lt;/p&gt;
&lt;p&gt;To prepare for the driver or Operator installation, the following steps need to be performed:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Copy the offline bundle file created from the previous step to a system with access to an image registry available to your Kubernetes/OpenShift cluster&lt;/li&gt;
&lt;li&gt;Expand the bundle file by running &lt;code&gt;tar xvfz &amp;lt;filename&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Run the &lt;code&gt;csi-offline-bundle.sh&lt;/code&gt; script and supply the &lt;code&gt;-p&lt;/code&gt; option as well as the path to the internal registry with the &lt;code&gt;-r&lt;/code&gt; option
&lt;ul&gt;
&lt;li&gt;For Operator installs, the &lt;code&gt;csm-offline-bundle.sh&lt;/code&gt; script will be found in the &lt;code&gt;scripts&lt;/code&gt; directory&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The script will then perform the following steps:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Load the required container images into the local system&lt;/li&gt;
&lt;li&gt;Tag the images according to the user-supplied registry information&lt;/li&gt;
&lt;li&gt;Push the newly tagged images to the registry&lt;/li&gt;
&lt;li&gt;Modify the Helm charts or Operator configuration to refer to the newly tagged/pushed images&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;An example of preparing the bundle for installation for the Dell CSM Operator:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;tar xvfz dell-csm-operator-bundle.tar.gz
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;dell-csm-operator-bundle/
dell-csm-operator-bundle/deploy/
dell-csm-operator-bundle/deploy/operator.yaml
dell-csm-operator-bundle/deploy/crds/
dell-csm-operator-bundle/deploy/crds/storage.dell.com_containerstoragemodules.yaml
dell-csm-operator-bundle/deploy/olm/
dell-csm-operator-bundle/deploy/olm/operator_community.yaml
...
...
dell-csm-operator-bundle/README.md
dell-csm-operator-bundle/LICENSE
&lt;/code&gt;&lt;/pre&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87&#34;&gt;cd&lt;/span&gt; dell-csm-operator-bundle
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;bash scripts/csm-offline-bundle.sh -p -r localregistry:5000/dell-csm-operator/
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;Preparing a offline bundle for installation

*
* Loading docker images

Loaded image: docker.io/dellemc/csi-powerstore:v2.9.1
Loaded image: docker.io/dellemc/csi-isilon:v2.9.1
...
...
Loaded image: registry.k8s.io/sig-storage/csi-resizer:v1.8.0
Loaded image: registry.k8s.io/sig-storage/csi-snapshotter:v6.2.2

*
* Tagging and pushing images

   dellemc/csi-isilon:v2.8.0 -&amp;gt; localregistry:5000/dell-csm-operator/csi-isilon:v2.8.0
   dellemc/csi-metadata-retriever:v1.5.0 -&amp;gt; localregistry:5000/dell-csm-operator/csi-metadata-retriever:v1.5.0
   ...
   ...
   registry.k8s.io/sig-storage/csi-resizer:v1.8.0 -&amp;gt; localregistry:5000/dell-csm-operator/csi-resizer:v1.8.0
   registry.k8s.io/sig-storage/csi-snapshotter:v6.2.2 -&amp;gt; localregistry:5000/dell-csm-operator/csi-snapshotter:v6.2.2

*
* Preparing files within /root/dell-csm-operator-bundle

   changing: dellemc/csi-isilon:v2.8.0 -&amp;gt; localregistry:5000/dell-csm-operator/csi-isilon:v2.8.0
   changing: dellemc/csi-metadata-retriever:v1.5.0 -&amp;gt; localregistry:5000/dell-csm-operator/csi-metadata-retriever:v1.5.0
   ...
   ...
   changing: registry.k8s.io/sig-storage/csi-resizer:v1.8.0 -&amp;gt; localregistry:5000/dell-csm-operator/csi-resizer:v1.8.0
   changing: registry.k8s.io/sig-storage/csi-snapshotter:v6.2.2 -&amp;gt; localregistry:5000/dell-csm-operator/csi-snapshotter:v6.2.2

*
* Complete
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;perform-either-a-helm-installation-or-operator-installation&#34;&gt;Perform either a Helm installation or Operator installation&lt;/h3&gt;
&lt;p&gt;Now that the required images are available and the Helm Charts/Operator configuration updated, you can proceed by following the usual installation procedure as documented either via &lt;a href=&#34;https://dell.github.io/csm-docs/csm-docs/docs/csidriver/installation/helm/&#34;&gt;Helm&lt;/a&gt; or &lt;a href=&#34;https://dell.github.io/csm-docs/csm-docs/docs/deployment/csmoperator/#installation&#34;&gt;Operator&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;NOTES:&lt;/em&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Offline bundle installation is only supported with manual installs i.e. without using Operator Lifecycle Manager.&lt;/li&gt;
&lt;li&gt;Installation should be done using the files that are obtained after unpacking the offline bundle (dell-csm-operator-bundle.tar.gz) as the image tags in the manifests are modified to point to the internal registry.&lt;/li&gt;
&lt;li&gt;Offline bundle installs operator in &lt;code&gt;default&lt;/code&gt; namespace via install.sh script. Make sure that the current context in kubeconfig file has the namespace set to &lt;code&gt;default&lt;/code&gt;.&lt;/li&gt;
&lt;/ol&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Testing Drivers</title>
      <link>https://dell.github.io/csm-docs/docs/csidriver/installation/test/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://dell.github.io/csm-docs/docs/csidriver/installation/test/</guid>
      <description>
        
        
        
      </description>
    </item>
    
  </channel>
</rss>
