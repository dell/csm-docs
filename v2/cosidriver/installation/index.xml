<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Installation on </title>
    <link>https://dell.github.io/csm-docs/v2/cosidriver/installation/</link>
    <description>Recent content in Installation on </description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <atom:link href="https://dell.github.io/csm-docs/v2/cosidriver/installation/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Configuration File</title>
      <link>https://dell.github.io/csm-docs/v2/cosidriver/installation/configuration_file/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://dell.github.io/csm-docs/v2/cosidriver/installation/configuration_file/</guid>
      <description>Dell COSI Driver Configuration Schema This configuration file is used to specify the settings for the Dell COSI Driver, which is responsible for managing connections to the Dell ObjectScale platform. The configuration file is written in YAML format and based on the JSON schema and adheres to its specification.
YAML files can have comments, which are lines in the file that begin with the # character. Comments can be used to provide context and explanations for the data in the file, and they are ignored by parsers when reading the YAML data.</description>
    </item>
    <item>
      <title>COSI Driver installation using Helm</title>
      <link>https://dell.github.io/csm-docs/v2/cosidriver/installation/helm/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://dell.github.io/csm-docs/v2/cosidriver/installation/helm/</guid>
      <description>The COSI Driver for Dell ObjectScale can be deployed by using the provided Helm v3 charts on Kubernetes platform.
The Helm chart installs the following components in a Deployment in the specified namespace:
COSI Driver for ObjectScale Dependencies Installing any of the CSI Driver components using Helm requires a few utilities to be installed on the system running the installation.
Dependency Usage kubectl Kubectl is used to validate that the Kubernetes system meets the requirements of the driver.</description>
    </item>
  </channel>
</rss>
