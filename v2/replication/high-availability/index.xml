<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>High Availability on </title>
    <link>https://dell.github.io/csm-docs/v2/replication/high-availability/</link>
    <description>Recent content in High Availability on </description>
    <generator>Hugo</generator>
    <language>en</language>
    <atom:link href="https://dell.github.io/csm-docs/v2/replication/high-availability/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>PowerMax Metro</title>
      <link>https://dell.github.io/csm-docs/v2/replication/high-availability/powermax-metro/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://dell.github.io/csm-docs/v2/replication/high-availability/powermax-metro/</guid>
      <description>&lt;h2 id=&#34;srdf-metro-architecture&#34;&gt;&#xA;SRDF Metro Architecture &lt;a class=&#34;header-link&#34;  href=&#34;#srdf-metro-architecture&#34; style=&#34; display: inline-block; opacity: 0; transition: opacity 0s ease-in-out; &#34; onmouseover=&#34;this.style.opacity=1;&#34; onmouseout=&#34;this.style.opacity=0;&#34;&gt;&#xA;            &lt;svg fill=&#34;currentColor&#34; height=&#34;24&#34; viewBox=&#34;0 0 24 24&#34; width=&#34;24&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&#xA;                &lt;path d=&#34;M0 0h24v24H0z&#34; fill=&#34;none&#34;/&gt;&#xA;                &lt;path d=&#34;M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76 0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71 0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71 0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76 0 5-2.24 5-5s-2.24-5-5-5z&#34;/&gt;&#xA;            &lt;/svg&gt;&#xA;        &lt;/a&gt;&lt;/h2&gt;&lt;p&gt;&lt;img src=&#34;../../powermax-metro.png&#34; alt=&#34;metro architecture diagram&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;In SRDF metro configurations:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;R2 devices are Read/Write accessible to application hosts.&lt;/li&gt;&#xA;&lt;li&gt;The application host can write to both the R1 and R2 sides of the device pair.&lt;/li&gt;&#xA;&lt;li&gt;R2 devices assume the same external device identity(geometry, device WWN) as the R1 devices.&#xA;All the above characteristic makes SRDF metro best suited for the scenarios in which high availability of data is desired.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;With respect to Kubernetes, the SRDF metro mode works in single cluster scenarios. In the metro, both the arrays—&lt;a href=&#34;../../../deployment/helm/modules/installation/replication/powermax/#on-storage-array&#34;&gt;arrays with SRDF metro link setup between them&lt;/a&gt;—involved in the replication are managed by the same &lt;code&gt;csi-powermax&lt;/code&gt; driver. The replication is triggered by creating a volume using a &lt;code&gt;StorageClass&lt;/code&gt; with metro-related parameters.&#xA;The driver on receiving the metro-related parameters in the &lt;code&gt;CreateVolume&lt;/code&gt; call creates a metro replicated volume and the details about both the volumes are returned in the volume context to the Kubernetes cluster. The Persistent Volume (PV) created in the process represents a pair of metro replicated volumes. When a &lt;code&gt;PV&lt;/code&gt;, representing a pair of metro replicated volumes, is claimed by a pod, the host treats each of the volumes represented by the single &lt;code&gt;PV&lt;/code&gt; as a separate data path. The switching between the paths, to read and write the data, is managed by the multipath driver. The switching happens automatically, as configured by the user—in round-robin fashion or otherwise—or when one of the paths goes down. For details on Linux multipath driver setup, &lt;a href=&#34;../../../deployment/helm/drivers/installation/powermax#linux-multipathing-requirements&#34;&gt;click here&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>PowerStore Metro</title>
      <link>https://dell.github.io/csm-docs/v2/replication/high-availability/powerstore-metro/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://dell.github.io/csm-docs/v2/replication/high-availability/powerstore-metro/</guid>
      <description>&lt;h2 id=&#34;powerstore-metro-architecture&#34;&gt;&#xA;PowerStore Metro Architecture &lt;a class=&#34;header-link&#34;  href=&#34;#powerstore-metro-architecture&#34; style=&#34; display: inline-block; opacity: 0; transition: opacity 0s ease-in-out; &#34; onmouseover=&#34;this.style.opacity=1;&#34; onmouseout=&#34;this.style.opacity=0;&#34;&gt;&#xA;            &lt;svg fill=&#34;currentColor&#34; height=&#34;24&#34; viewBox=&#34;0 0 24 24&#34; width=&#34;24&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&#xA;                &lt;path d=&#34;M0 0h24v24H0z&#34; fill=&#34;none&#34;/&gt;&#xA;                &lt;path d=&#34;M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76 0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71 0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71 0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76 0 5-2.24 5-5s-2.24-5-5-5z&#34;/&gt;&#xA;            &lt;/svg&gt;&#xA;        &lt;/a&gt;&lt;/h2&gt;&lt;p&gt;&lt;img src=&#34;../../powerstore-metro.png&#34; alt=&#34;metro architecture diagram&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;In PowerStore Metro configurations:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;The application host can write data to both sides of the Metro volume.&lt;/li&gt;&#xA;&lt;li&gt;The devices in the Metro volume are configured with the same external device identity, including the geometry and device WWN.&lt;/li&gt;&#xA;&lt;li&gt;When Metro is configured on the volume, the PowerStore system from which the metro source is configured is automatically set as preferred and the other is configured as non-preferred.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;With respect to Kubernetes, the PowerStore Metro mode works in single cluster scenarios. When utilizing Metro, both the arrays—&lt;a href=&#34;../../../deployment/helm/modules/installation/replication/powerstore/#on-storage-array&#34;&gt;arrays with metro link setup between them&lt;/a&gt;—involved in the replication are managed by the same &lt;code&gt;csi-powerstore&lt;/code&gt; driver. The replication is triggered by creating a volume using a &lt;code&gt;StorageClass&lt;/code&gt; with metro-related parameters.&#xA;The driver on receiving the metro-related parameters in the &lt;code&gt;CreateVolume&lt;/code&gt; call creates a metro replicated volume and the details about both the volumes are returned in the volume context to the Kubernetes cluster. The Persistent Volume (PV) created in the process represents a pair of metro replicated volumes. When a &lt;code&gt;PV&lt;/code&gt;, representing a pair of metro replicated volumes, is claimed by a pod, the host treats each of the volumes represented by the single &lt;code&gt;PV&lt;/code&gt; as a separate data path. The switching between the paths, to read and write the data, is managed by the multipath driver. The switching happens automatically, as configured by the user—in round-robin fashion or otherwise—or when one of the paths goes down. For details on Linux multipath driver setup, &lt;a href=&#34;../../../deployment/helm/drivers/installation/powerstore#linux-multipathing-requirements&#34;&gt;click here&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
